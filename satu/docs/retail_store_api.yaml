swagger: "2.0"
info:
  description: This is a simple API
  version: "1.2"
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /items:
    get:
      tags:
        - developers
      summary: item list
      operationId: list item
      description: |
        By passing in the appropriate options, you can search for
        certain available item
      produces:
        - application/json
      parameters:
        - in: query
          name: items_id
          description: pass an optional search string for looking up item
          required: false
          type: string
        - in: query
          name: category
          description: pass an optional search string for looking up item
          required: false
          type: string
        - in: query
          name: name
          description: pass an optional search string for looking up item
          required: false
          type: string
        - in: query
          name: limit
          description: maximum number of records to return
          type: integer
          format: uint32
          minimum: 0
          maximum: 50
        - in: query
          name: minPrice
          description: minimum price
          type: integer
          format: uint32
          minimum: 0
          maximum: 20000000
        - in: query
          name: maxPrice
          description: maximum price
          type: integer
          format: uint32
          minimum: 0
          maximum: 20000000
        - in: query
          name: sort
          description: pass an optional search string for looking up item
          required: false
          type: string
      responses:
        200:
          description: search results matching criteria
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Item'  
        400:
          description: bad input parameter
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Item'
    post:
      tags:
        - admins
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: inventoryItem
          description: Inventory item to add
          schema:
            $ref: "#/definitions/Item"
      responses:
        201:
          description: item created
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/Item'
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/Item'
        409:
          description: ---
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/Item'
    put:
      tags:
      - admins
      summary: edit an inventory item
      operationId: edit items
      description: edit an item to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inventoryItem
        description: Inventory item to add
        schema:
          $ref: '#/definitions/Item'
      responses:
        201:
          description: item updated
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/Item'
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/Item'
  /items/{item_name}:
    get:
      tags:
        - developers
      summary: item list
      operationId: list item
      description: |
        By passing in the appropriate options, you can search for
        certain available item
      produces:
        - application/json
      parameters:
        - in: path
          name : item_name
          type: string
          required: true
          description: item name user to get
      responses:
        200:
          description: search results matching criteria
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Item'  
                
 
        400:
          description: bad input parameter
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Item'
  /shoppingcarts:
    get:
      tags:
        - developers
      summary: shopping cart list
      operationId: shopping cart item
      description: |
        By passing in the appropriate options, you can get items in shopping cart
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: pass an required search string for looking up item in shopping cart
          required: true
          type: string
      responses:
        200:
          description: ok results matching criteria
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
        400:
          description: bad input parameter
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
    post:
      tags:
      - developers
      summary: adds an item to shopping cart
      operationId: addItemToShoppingCart
      description: Adds an item to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: token
          required: true
          type: string
        - in: body
          name: item_id
          description: Inventory item to add
          required: true
          schema:
            type: object
            properties:
              item_id:
                type: integer
                format: uint32
              quantity:
                type: integer
                format: uint32
      responses:
        201:
          description: item created
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
        409:
          description: an existing item already exists
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
    delete:
      tags:
      - developers
      summary: delete an item from shopping cart
      operationId: deleteItemFromShoppingCart
      description: delete an item from the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: token
          required: true
          type: string
        - in: body
          name: item_id
          description: Inventory item to add
          required: true
          schema:
            type: array
            items:
              type: object
            properties:
              item_id:
                type: integer
                format: uint32
      responses:
        201:
          description: item deleted
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
        409:
          description: item not exist
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: '#/definitions/shopping_cart'
  /shoppingcarts/checkout:
    post:
      tags:
      - developers
      summary: adds an order
      operationId: add an order
      description: Adds an order to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: header
        name: authorization
        description: token
        required : true
        type : string
      - in: body
        name: item
        description: Inventory item to add
        required : true
        schema:
          type: object
          properties:
            payment_service_id:
              type: integer
            address_id:
              type: integer
            courier_id:
              type: integer
      responses:
        201:
          description: order created
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
  /orders/{order_id}:
    get:
      tags:
        - developers
      summary: shopping cart list
      operationId: order item
      description: By passing in the appropriate options, you can get items in shopping cart
      produces:
        - application/json
      parameters:
        - in: path
          name: order_id
          type: integer
          required: true
      responses:
        200:
          description: search results matching criteria
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/order'
        400:
          description: bad input parameter
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/order'
  /orders:
    get:
      tags:
        - developers
      summary: shopping cart list
      operationId: order item
      description: By passing in the appropriate options, you can get items in shopping cart
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: pass an required search string for looking up ite  in shopping cart
          required: true
          type: string
        - in: query
          name: order_id
          description: pass an order_id
          required: false
          type: integer
      responses:
        200:
          description: search results matching criteria
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/order'
        400:
          description: bad input parameter
          schema:
              type: object
              properties: 
                code:
                  type: string
                status:
                  type: string
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: '#/definitions/order'
    post:
      tags:
      - developers
      summary: adds an order
      operationId: add an order
      description: Adds an order to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: header
        name: authorization
        description: token
        required : true
        type : string
      - in: body
        name: item
        description: Inventory item to add
        required : true
        schema:
          type: object
          properties:
            payment_service_id:
              type: integer
            address_id:
              type: integer
            courier_id:
              type: integer 
            order_item: 
              type: array
              items:
                $ref: '#/definitions/Item'
      responses:
        201:
          description: order created
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
    delete:
      tags:
      - developers
      summary: delete order item 
      operationId: delete order
      description: delete an order from the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: token
          required: true
          type: string
        - in: body
          name: order_id
          description: Inventory item to add
          required: true
          schema:
            type: object
            properties:
              order_id:
                type: integer
                example: 0
      responses:
        201:
          description: order deleted
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
        400:
          description: invalid input, object invalid
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
        409:
          description: order not exist
          schema:
              $ref: '#/definitions/Response' 
              type: object
              properties: 
                data:
                  type: object
                  $ref: "#/definitions/order"
                payment:
                  type: object
                  $ref: "#/definitions/Payment"
  /register:
    post:
      tags:
        - developer
      summary: register user account
      operationId: register user account
      description: register user account to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: register user
          description: register user account
          required: true
          schema:
            $ref: "#/definitions/RegisterUser"
      responses:
        201:
          description: account created
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: object
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: object
  /login:
    post:
      tags:
        - developer
      summary: login user account
      operationId: login user account
      description: login user account to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user login
          description: login user account
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: login access granted
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: object
                $ref: "#/definitions/CustomerInfo"
        400:
          description: incorrect username/password
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: object
                $ref: "#/definitions/CustomerInfo"
  /payments:
    get:
      tags:
      - developers
      summary: payment list
      operationId: payment item
      description: |
        By passing in the appropriate options, you can search for
        certain available payment
      produces:
      - application/json
      parameters:
      - in: header
        name: authorization
        required: true
        type: string
      - in: query
        name: payment_id
        description: pass an optional search string for looking up item
        required: false
        type: string
      - in: query
        name: order_id
        description: order id from order
        required: false
        type: string
      - in: query
        name: customer_id
        description: customer id from customer
        required: false
        type: string
      - in: query
        name: status
        description: status
        type: integer
        format: uint32
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data:
                type: array
                items: 
                  $ref: '#/definitions/Payment'
        400:
          description: bad input parameter
          schema:
            type: object
            properties: 
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data:
                type: array
                items: 
                  $ref: '#/definitions/Payment'
  /payments/{payment_id}:
    get:
      tags:
      - developers
      summary: payment list
      operationId: payment item
      description: |
        By passing in the appropriate options, you can search for
        certain available payment
      produces:
      - application/json
      parameters:
      - in: header
        name: authorization
        required: true
        type: string
      - in: path
        name: payment_id
        description: pass an optional search integer for looking up payment
        required: true
        type: integer
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data:
                type: array
                items: 
                  $ref: '#/definitions/Payment'
        400:
          description: bad input parameter
          schema:
            type: object
            properties: 
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data:
                type: array
                items: 
                  $ref: '#/definitions/Payment'
  /courier:
    get:
      tags:
      - developers
      summary: courier list
      operationId: courier courier
      description: |
        By passing in the appropriate options, you can search for
        certain available courier
      produces:
      - application/json
      parameters:
      - in: header
        name: authorization
        required: true
        type: string
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Courier'
        400:
          description: bad input parameter
  /address:
    get:
      tags:
      - developers
      summary: get address
      operationId: get address
      # description: |
      #   By passing in the appropriate options, you can search for
      #   certain available item
      produces:
        - application/json
      parameters:
      - in: header
        name: authorization
        required: true
        type: string
      - in: query
        name: address_id
        description: pass an optional search string for looking up address
        required: false
        type: integer
      - in: query
        name: name
        description: pass an optional search string for looking up address
        required: false
        type: string
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Address'
        400:
          description: bad input parameter
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Address'
    post:
      tags:
      - developers
      summary: adds an address item
      operationId: addaddress
      description: Adds an address to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authorization
        description: authorization token
        required:  true
        type: string
      - in: body
        name: addressItem
        description: address item to add
        required: true
        schema:
          type: object
          properties: 
            address:
              type: string
            name:
              type: string
      responses:
        201:
          description: address created
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                  $ref: '#/definitions/Address'
        400:
          description: invalid input, object invalid
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                  $ref: '#/definitions/Address'
        409:
          description: an existing address already exists
          schema:
            type: object
            properties:
              code:
                type: integer
              status:
                type: string
              message:
                type: string
              data: 
                  $ref: '#/definitions/Address'
  /address/{address_id}:
      get:
        tags:
        - developers
        summary: get address
        operationId: get address
        # description: |
        #   By passing in the appropriate options, you can search for
        #   certain available item
        produces:
          - application/json
        parameters:
        - in: header
          name: authorization
          required: true
          type: string
        - in: path
          name: address_id
          description: pass an optional search string for looking up address
          required: true
          type: integer
        responses:
          200:
            description: search results matching criteria
            schema:
              type: object
              properties:
                code:
                  type: integer
                status:
                  type: string
                message:
                  type: string
                data: 
                  type: array
                  items:
                    $ref: '#/definitions/Address'
          400:
            description: bad input parameter
            schema:
              type: object
              properties:
                code:
                  type: integer
                status:
                  type: string
                message:
                  type: string
                data: 
                  type: array
                  items:
                    $ref: '#/definitions/Address'      
definitions:
  Item:
    type: object
    properties:
      id:
        type: integer
        format: uint32
        example: 69
      name:
        type: string
        example: Widget Adapter
      description:
        type: string
        example: "ini adalah buku budi"
      category:
        type: string
      price:
        type: integer
        format: uint32
  shopping_cart:
    type: array
    items: 
      $ref: '#/definitions/Item'
  order:
    type: object
    properties:
      order_id:
        type: integer
        example: 1
      courier:
        type: object
        properties:
          company_name:
            type: string
            example: "JNE"
      total_amount:
        type: integer
      address:
        type: string
      payment_id:
        type: string
      status:
        type: string
  RegisterUser:
    type: object
    properties:
      username:
        type: string
      nama:
        type: string
      email:
        type: string
        example: "email@email.com"
      phone_number:
        type: string
        example: "+628999"
      password:
        type: string
        example: "password123"
  UserLogin:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        example: "password123"
  Payment:
    type: object
    properties: 
      payment_id:
        type: integer
      transfer_code:
        type: string
      order_id:
        type: integer
      customer_id:
        type: integer
      status:
        type: string
      total_amount:
        type: integer
  Courier:
    type : object
    properties: 
      courier_id:
        type: integer
      company_name:
        type: string
  Address:
    type : object
    properties: 
      address_id:
        type : string
      name:
        type: string
      address:
        type  : string
  Response:
    type: object
    properties: 
      code:
        type : integer
      status:
        type: string
      message:
        type: string
  CustomerInfo:
    type: object
    properties:
      customer_id:
        type: integer
      username:
        type: string
      email:
        type: string
      no_hp:
        type: string
      token:
        type: string
      

      

      

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /a4443/retail_store/1.2
schemes:
  - https
